logging.level.org.springframework.boot.autoconfigure.condition=TRACE

##指定package中class热部署
spring.devtools.restart.additional-paths=src/main/java/com/anzlee/generalapi/third

## Cache type, auto-detected according to the environment by default.
#spring.cache.type=ehcache
spring.cache.type=simple

#spring.jmx.enabled=true
spring.jmx.enabled=false
## MBeanServer bean name.

## Server Config
server.port=8080
server.tomcat.uri-encoding=utf-8

#### ELASTICSEARCH (ElasticsearchProperties)
## Elasticsearch cluster name.
#spring.data.elasticsearch.cluster-name=elasticsearch
#spring.data.elasticsearch.cluster-name=isearch
## Comma-separated list of cluster node addresses. If not specified, starts a client node.
#spring.data.elasticsearch.cluster-nodes=127.0.0.1\:9300
#spring.data.elasticsearch.cluster-nodes=
## Additional properties used to configure the client.
#spring.data.elasticsearch.properties.*=
## Enable Elasticsearch repositories.
#spring.data.elasticsearch.repositories.enabled=true
#spring.data.elasticsearch.pluginClasses=org.elasticsearch.index.reindex.ReindexPlugin,org.elasticsearch.plugin.deletebyquery.DeleteByQueryPlugin,com.trs.comms.ansj.dict.AnsjDictApiPlugin

## JPA
#Spring Data JPA
spring.jpa.database=MYSQL
spring.jpa.show-sql=true
#sdebug=true
spring.jpa.hibernate.ddl-auto=update
# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy
# stripped before adding them to the entity manager)
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

#### DATASOURCE (DataSourceAutoConfiguration & DataSourceProperties)
## Do not stop if an error occurs while initializing the database.
#spring.datasource.continue-on-error=false
## Data (DML) script resource reference.
#spring.datasource.data=
## Fully qualified name of the JDBC driver. Auto-detected based on the URL by default.
#spring.datasource.driver-class-name=
## Populate the database using 'data.sql'.
#spring.datasource.initialize=true
## Enable JMX support (if provided by the underlying pool).
#spring.datasource.jmx-enabled=false
## JNDI location of the datasource. Class, url, username & password are ignored when set.
#spring.datasource.jndi-name=
## For instance 100
#spring.datasource.max-active=
## For instance 8
#spring.datasource.max-idle=
#spring.datasource.max-wait=
#spring.datasource.min-evictable-idle-time-millis=
#spring.datasource.min-idle=8
## Name of the datasource.
#spring.datasource.name=testdb
## Platform to use in the schema resource (schema-${platform}.sql).
#spring.datasource.platform=all
## Schema (DDL) script resource reference.
#spring.datasource.schema=
## Statement separator in SQL initialization scripts.
#spring.datasource.separator=;
## SQL scripts encoding.
#spring.datasource.sql-script-encoding=
## For instance `false`
#spring.datasource.test-on-borrow=
## For instance `false`
#spring.datasource.test-on-return=
##
spring.datasource.test-while-idle=true
#spring.datasource.time-between-eviction-runs-millis= 1
## Fully qualified name of the connection pool implementation to use. By default, it is auto-detected from the classpath.
# 数据库访问配置
# 主数据源，默认的
spring.datasource.type=com.alibaba.druid.pool.DruidDataSource
spring.datasource.driver-class-name=com.mysql.jdbc.Driver
#spring.datasource.type=
## JDBC url of the database.
#spring.datasource.url=jdbc\:mysql\://172.21.24.40\:3306/isearch
spring.datasource.url=jdbc\:mysql\://127.0.0.1\:3306/cs_sports?useUnicode\=true&characterEncoding\=utf8
spring.datasource.username=root
spring.datasource.password=123456
spring.datasource.validation-query=select 1

#### JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
## Enable JPA repositories.
#spring.data.jpa.repositories.enabled=true
## Target database to operate on, auto-detected by default. Can be alternatively set using the "databasePlatform" property.
#spring.jpa.database=
## Name of the target database to operate on, auto-detected by default. Can be alternatively set using the "Database" enum.
#spring.jpa.database-platform=
## Initialize the schema on startup.
#spring.jpa.generate-ddl=false
spring.jpa.generate-ddl=true
## DDL mode. This is actually a shortcut for the "hibernate.hbm2ddl.auto" property. Default to "create-drop" when using an embedded database, "none" otherwise.
#spring.jpa.hibernate.ddl-auto=
#spring.jpa.hibernate.ddl-auto=update
## Naming strategy fully qualified name.
#spring.jpa.hibernate.naming-strategy=
## Register OpenEntityManagerInViewInterceptor. Binds a JPA EntityManager to the thread for the entire processing of the request.
#spring.jpa.open-in-view=true
#spring.jpa.open-in-view=true
## Additional native properties to set on the JPA provider.
#spring.jpa.properties.*=
#spring.jpa.properties.hibernate.ejb.naming_strategy=org.hibernate.cfg.ImprovedNamingStrategy
#spring.jpa.properties.hibernate.use_second_level_cache=false
#spring.jpa.properties.hibernate.cache.region.factory_class=org.hibernate.cache.internal.NoCachingRegionFactory
#spring.jpa.properties.hibernate.cache.use_query_cache=false
#spring.jpa.properties.hibernate.jdbc.fetch_size=50
#spring.jpa.properties.hibernate.jdbc.batch_size=30
#spring.jpa.properties.hibernate.connection.isolation=2
#spring.jpa.properties.javax.persistence.validation.mode=none
## Enable logging of SQL statements.
#spring.jpa.show-sql=false

##Druid
# 初始化大小，最小，最大
spring.datasource.druid.initial-size=5
spring.datasource.druid.max-active=10
spring.datasource.druid.min-idle=5
# 配置获取连接等待超时的时间
spring.datasource.druid.max-wait=60000
# 打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.druid.pool-prepared-statements=true
spring.datasource.druid.max-pool-prepared-statement-per-connection-size=20
#spring.datasource.druid.max-open-prepared-statements= #和上面的等价
spring.datasource.druid.validation-query=SELECT 1 FROM DUAL
spring.datasource.druid.validation-query-timeout=60000
spring.datasource.druid.test-on-borrow=false
spring.datasource.druid.test-on-return=false
spring.datasource.druid.test-while-idle=true
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.druid.time-between-eviction-runs-millis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.druid.min-evictable-idle-time-millis=100000
# 配置一个连接在池中最大生存的时间，单位是毫秒
#spring.datasource.druid.max-evictable-idle-time-millis=
spring.datasource.druid.filters=stat,wall,log4j
# WebStatFilter配置，说明请参考Druid Wiki，配置_配置WebStatFilter
spring.datasource.druid.web-stat-filter.enabled=true
spring.datasource.druid.web-stat-filter.url-pattern=/*
spring.datasource.druid.web-stat-filter.exclusions=*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*
spring.datasource.druid.web-stat-filter.session-stat-enable=true
spring.datasource.druid.web-stat-filter.session-stat-max-count=1000
spring.datasource.druid.web-stat-filter.principal-session-name=
spring.datasource.druid.web-stat-filter.principal-cookie-name=
spring.datasource.druid.web-stat-filter.profile-enable=true
# StatViewServlet配置，说明请参考Druid Wiki，配置_StatViewServlet配置
spring.datasource.druid.stat-view-servlet.enabled=true
spring.datasource.druid.stat-view-servlet.url-pattern=/druid/*
spring.datasource.druid.stat-view-servlet.reset-enable=true
spring.datasource.druid.stat-view-servlet.login-username=druid
spring.datasource.druid.stat-view-servlet.login-password=druid
spring.datasource.druid.stat-view-servlet.allow=127.0.0.1
spring.datasource.druid.stat-view-servlet.deny=
# 配置StatFilter
spring.datasource.druid.filter.stat.db-type=mysql
spring.datasource.druid.filter.stat.log-slow-sql=true
spring.datasource.druid.filter.stat.slow-sql-millis=2000
# 配置WallFilter
spring.datasource.druid.filter.wall.enabled=true
spring.datasource.druid.filter.wall.db-type=mysql
spring.datasource.druid.filter.wall.config.delete-allow=false
spring.datasource.druid.filter.wall.config.drop-table-allow=false

